const cfonts = require('cfonts');
const chalk = require('chalk');
const fetch = require('node-fetch');
const rs = require('readline-sync');
const moment = require("moment-timezone");
moment.tz.setDefault('Asia/Jakarta').locale('id')

async function start() {
    
    cfonts.say('STUMBLE|Exploit', {
        align: 'center',
        colors: ['yellow','green'],
        background: 'transparent',
        letterSpacing: 2,
        lineHeight: 2,
        space: true,
        maxLength: '0',
        gradient: false,
        independentGradient: false,
        transitionGradient: false,
        env: 'node'
    });
    console.log(chalk.green('==================================================================='))
    console.log(chalk.red('AVISO: SE VOCES QUISEREM POSSO FAZER UM VIDEO MOSTRANDO COMO USA!'))
    console.log(chalk.green('==================================================================='))
    console.log(chalk.red())
    console.log(chalk.red('--------------------------------------'))
    console.log(chalk.blue('Creador : GucciExploit'))
    console.log(chalk.blue('Tiktok : @gucci..mp4'))
    console.log(chalk.blue('Discord : Gucci#2661'))
    console.log(chalk.red('--------------------------------------'))

    const code = rs.question(chalk.green("[ ! ]") + " coloque sua Auth : ");
    if (code.length === 0) { 
        console.log(chalk.red("[ F ]") +  " Pfvr coloque Sua Auth!");
    }
    console.log(`
[ 1 ] Round 1
[ 2 ] Round 2
[ 3 ] Round 3
`)
    var list = ["1", "2", "3"]
    var round = rs.question(chalk.green("[ ! ]") + " Coloque seu Round (1, 2, 3) : ");
        if (round.length === 0) {
            console.log(chalk.red("[ F ]") +  " Pfvr Coloque seu Round!");
            round = rs.question(chalk.green("[ ! ]") + " Coloque seu Round (1, 2, 3) : ");
        }
        if (!Number(round)) { 
            console.log(chalk.red("[ F ]") +  " Pfvr coloque seu round so numeros sem letras!");
            round = rs.question(chalk.green("[ ! ]") + " Coloque seu Round (1, 2, 3): ");
        }
        if (!list.includes(round)) { 
            console.log(chalk.red("[ F ]") +  " Pfvr coloque os numeros corretos!");
            round = rs.question(chalk.green("[ ! ]") + " Coloque seu Round (1, 2, 3): ");
        }
    var delay = rs.question(chalk.green("[ ! ]") + " coloque o Delay (Minimo : 7) : ");
        if (delay.length === 0) {
            console.log(chalk.red("[ F ]") +  " Pfvr coloque o Delay!");
            delay = rs.question(chalk.green("[ ! ]") + " coloque o Delay (Minimo : 7) : ");
        }
        if (!Number(delay)) { 
            console.log(chalk.red("[ F ]") +  " Pfvr coloque o Delay Somente numeros sem letras!");
            delay = rs.question(chalk.green("[ ! ]") + " coloque o Delay (Minimo : 7) : ");
        }
        if (delay < 7) {
            console.log(chalk.red("[ F ]") +  " O minimo e 7 se colocar mais sera BANIDO!");
            delay = rs.question(chalk.green("[ ! ]") + " coloque o Delay (Minimo : 7) : ");
        } 

    console.log("")
    
    while(true) {

        const result = await runExploit(code, round)
        if (!result) {
            console.log(chalk.red("[ F ]") + " SUA AUTH E INVALIDA!")
            console.log(chalk.red("[ F ]") + " PORFAVOR CHECK SUA AUTH!")
            return
        } else if (result.includes("User")) {
            const data = JSON.parse(result)
            await reqDelay(Number(delay) + "000")
            console.log(chalk.green("( OK )") + " | " + moment().format("HH:mm:ss") + " |=| " + chalk.yellow(data.User.Username) + " |=| " +  chalk.blue(data.User.Country) + " |=| " + chalk.yellow(data.User.SkillRating) + " Trofeus" + " | " + chalk.yellow(data.User.Crowns) + " Coroas" + " | ")
        } else if (result.includes("BANNED")) {
          console.log(chalk.red("[ F ]") + " SUA CONTA FOI BANNED KKKJ!")
        }

    }

}
start()

async function runExploit(code, round) {
    return new Promise((resolve, reject) => {
        fetch(`http://kitkabackend.eastus.cloudapp.azure.com:5010/round/finishv2/${round}`, {
            method: "GET",
            headers: {
                "authorization": code,
            }
        }).then(res => res.text())
        .then((result) => {
            resolve(result)
        }).catch((e) => {
            console.log(e)
        });
    })
}

async function reqDelay (ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}